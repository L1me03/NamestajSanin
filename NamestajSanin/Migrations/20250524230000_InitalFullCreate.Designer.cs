// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NamestajSanin.Data;

#nullable disable

namespace NamestajSanin.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250524230000_InitalFullCreate")]
    partial class InitalFullCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("NamestajSanin.Models.Faza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NarudzbaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Redosled")
                        .HasColumnType("int");

                    b.Property<int>("TrajanjeMin")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NarudzbaId");

                    b.ToTable("Faze");
                });

            modelBuilder.Entity("NamestajSanin.Models.Narudzba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Boja")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Dimenzije")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("KontaktIme")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Materijal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VrstaNamestaja")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Narudzbe");
                });

            modelBuilder.Entity("NamestajSanin.Models.Zadatak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FazaId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ZaposleniId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FazaId");

                    b.HasIndex("ZaposleniId");

                    b.ToTable("Zadaci");
                });

            modelBuilder.Entity("NamestajSanin.Models.Zaposleni", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pozicija")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Smena")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Zaposleni");
                });

            modelBuilder.Entity("NamestajSanin.Models.Faza", b =>
                {
                    b.HasOne("NamestajSanin.Models.Narudzba", "Narudzba")
                        .WithMany("Faze")
                        .HasForeignKey("NarudzbaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Narudzba");
                });

            modelBuilder.Entity("NamestajSanin.Models.Zadatak", b =>
                {
                    b.HasOne("NamestajSanin.Models.Faza", "Faza")
                        .WithMany("Zadaci")
                        .HasForeignKey("FazaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NamestajSanin.Models.Zaposleni", "Zaposleni")
                        .WithMany("Zadaci")
                        .HasForeignKey("ZaposleniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faza");

                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("NamestajSanin.Models.Faza", b =>
                {
                    b.Navigation("Zadaci");
                });

            modelBuilder.Entity("NamestajSanin.Models.Narudzba", b =>
                {
                    b.Navigation("Faze");
                });

            modelBuilder.Entity("NamestajSanin.Models.Zaposleni", b =>
                {
                    b.Navigation("Zadaci");
                });
#pragma warning restore 612, 618
        }
    }
}
